@use "sass:color"
@use "variables.sass" as *
@use "functions.sass" as *

$background-color: #043147
@if $highcontrast
  $background-color: #021119
$background-image: null
$text: #f0e8d4
$text2: #faffe5
$stark: white
$selection: rgb(3 182 140)

@if $light
  @if not $highcontrast
    $background-color: #fff4e0
    // $background-image: url("../assets/images/circle_texture.png") 0 0 / 150px 150px
  @else
    $background-color: white
  $text: #210b06
  $text2: #390c03
  $stark: black
  $selection: rgb(140 222 202)

$background: $background-color
@if $background-image
  /* the transparent linear-gradient masks the background image so it is not targeted by longpressing on iOS */
  $background: linear-gradient(transparent, transparent), $background-color $background-image

body
  background: $background
  color: $text
  @if $highcontrast
    color: $stark


h2, h3, h4, h5
  color: $text2
  @if $highcontrast
    color: $stark

h3
  border-bottom-color: $text

hr
  border: none
  border-bottom: 1px solid $text
  opacity: 0.6

// TODO: abstraction
code
  @if not $light
    background-color: #0005
    box-shadow: 0.5px 0.5px 3px #fff2, 0.5px 0.5px 2px inset #0001
    a[href] > &
      box-shadow: 0.5px 0.5px 3px rgb(15 232 21 / 26%), 0.5px 0.5px 2px inset rgb(0 0 0 / 7%)
    a[href]:hover > &
      box-shadow: 0.5px 0.5px 3px rgb(15 232 21 / 50%), 0.5px 0.5px 2px inset rgb(0 0 0 / 7%)
  @else
    background-color: #fff5
    box-shadow: 0.5px 0.5px 3px #0002, 0.5px 0.5px 2px inset rgb(224 249 255 / 35%)
    a[href] > &
      box-shadow: 0.5px 0.5px 3px rgb(0 109 3 / 34%), 0.5px 0.5px 2px inset rgb(224 249 255 / 35%)
    a[href]:hover > &
      box-shadow: 0.5px 0.5px 3px #35d62dd0, 0.5px 0.5px 2px inset rgb(224 249 255 / 35%)
pre > code
  @if not $light
    background-color: #00000070
  @else
    background-color: #fff8eb5e
  & > code
    background: none
    box-shadow: none




mjx-container[jax="CHTML"], .katex, span.katex
  //color: #dfdae9;

mjx-container[jax="CHTML"][display="true"], .katex
  max-width: 100%
  overflow-x: scroll


// Selection colors (and styles)
::selection
  //background-color: #a2056175;
  background-color: rgb(3 182 140 / 46%)
  @if $light
    background-color: rgb(140 222 202 / 46%)

  color: $stark
  text-shadow: none

a[href]::selection, a[href] ::selection
  text-decoration-line: underline
  //color: #3feef0;
  color: #35d62d
  @if $light
    color: #31ba2a



// Box colors
.Box
  @include whether("details", "& > summary", "&::before")
    background: $background
    @media print
      background: white


.Box > .Box
  margin: 10px


$transition: 0.4s

@mixin Box($color)
  @extend .Box
  $keyframe: unique-id()
  transition: border-image $transition
  border-color: color.change($color, $alpha: 0.5)
  border-image-source: radial-gradient(ellipse at 50% 50%, color.change($color, $alpha: 0.3), color.change($color, $alpha: 0.5))
  @include whether("details", "&[open]:hover", "&:hover")
    border-image-source: radial-gradient(ellipse at 50% 50%, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
    //animation: $keyframe 8s $transition linear infinite;
    //border-color: color.change($color, $alpha: 0.87);
  @include unify-parent("details:not([open])")
    border-image: none
    border-bottom-style: dashed
    box-shadow: 0px -1px 2px inset color.change($color, $alpha: 0.25)

  @include whether("details", "& > summary", "&::before")
    color: $color
  @include unify-parent(("details": "& > summary"))
    &::marker
      transition: color $transition
    &:not(:hover)::marker
      color: color.change($color, $alpha: 0.4)

  &::selection, & > :not(.Box)::selection, & > :not(.Box) *::selection
    background-color: color.change($color, $alpha: 0.4)

  //
    @keyframes #{$keyframe}
      $hi: 60%
      $lo: 40%
      0%
        border-image-source: radial-gradient(ellipse at 50% 50%, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
      15%
        border-image-source: radial-gradient(ellipse at $lo $lo, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
      20%
        border-image-source: radial-gradient(ellipse at $lo 50%, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
      25%
        border-image-source: radial-gradient(ellipse at $lo $hi, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
      30%
        border-image-source: radial-gradient(ellipse at 50% $hi, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
      35%
        border-image-source: radial-gradient(ellipse at $hi $hi, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
      40%
        border-image-source: radial-gradient(ellipse at $hi 50%, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
      45%
        border-image-source: radial-gradient(ellipse at $hi $lo, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
      50%
        border-image-source: radial-gradient(ellipse at 50% $lo, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
      55%
        border-image-source: radial-gradient(ellipse at $lo $lo, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))
      70%
        border-image-source: radial-gradient(ellipse at 50% 50%, color.change($color, $alpha: 1.0, $hue: -20deg), color.change($color, $alpha: 0.8))


.Note
  @include Box(#d350fe)

.Bonus
  @include Box(#e86db7)

.Key_Idea
  @include Box(#fab30e)

.Warning
  @include Box(#fe7a29)

.Error
  @include Box(#ff004d)

.Details
  @include Box(#2372ff)

.Example
  @include Box(#1dca24)


// Code colors
// Keyword
code span.kw, code.kw
  color: #cf2a8f
// String
code span.st, code.st
  color: goldenrod
// SpecialChar
code span.sc, code.sc
  color: yellow
  @if $light
    color: darkorange
// SpecialString
code span.ss, code.ss
  color: yellow
// DataType
code span.dt, code.dt
  color: #db74b9
// Other
code span.ot, code.ot
  color: #acd4e4
  @if $light
    color: #03a0df
// Operator
code span.op, code.op
  color: #f97d7d
// Char
code span.ch, code.ch
  color: #049b0a
// Function
code span.fu, code.fu
  color: #ff9358
// Alert
code span.al, code.al
  color: #ffff00
// Annotation
code span.an, code.an
  color: #0066ff
  font-weight: 500
  font-style: italic
// Attribute
code span.at, code.at
  color: inherit
// BaseN
code span.bn, code.bn
  color: #44aa43
// BuiltIn
code span.bu, code.bu
  color: inherit
// ControlFlow
code span.cf, code.cf
  color: #43a8ed
  font-weight: 500
// Constant
code span.cn, code.cn
  color: inherit
// Comment
code span.co, code.co
  color: #27c856
  font-style: italic
// Documentation
code span.do, code.do
  color: #0066ff
  font-style: italic
// DecVal
code span.dv, code.dv
  color: #44aa43
// Error
code span.er, code.er
  @if not $light
    color: #ffff00
  @else
    color: #ff7517
  font-weight: 500
// Extension
code span.ex, code.ex
  color: inherit
// Float
code span.fl, code.fl
  color: #44aa43
// Import
code span.im, code.im
  color: #7f2db9
// Information
code span.in, code.in
  color: #0066ff
  font-weight: 500
// Preprocessor
code span.pp, code.pp
  font-weight: 500
// Variable
code span.va, code.va
  color: inherit
// VerbatimString
code span.vs, code.vs
  color: #049b0a
// Warning
code span.wa, code.wa
  color: #ffff00
  font-weight: 500



svg.kgt
  rect, line, path
    stroke: $text
  path.arrow, text
    fill: $text

.parse-table > thead > tr > th:not(:first-child), .parse-table tr > th:first-child
  background: $background


table:not(.data-table)
  caption
    margin: 4px
  border-collapse: collapse
  & tbody, & td
    border: 1px solid color.adjust($text, $alpha: -0.65)
    padding: 10px 12px
    transition: border-bottom-color 0.2s
  & td:hover
    border-bottom-color: color.adjust($text, $alpha: -0.2)
  & th
    padding: 12px 12px
  & th
    border-top: 1px solid color.adjust($text, $alpha: -0.85)
    border-left: 1px solid color.adjust($text, $alpha: -0.85)
    border-right: 1px solid color.adjust($text, $alpha: -0.85)
    transition: border-top-color 0.2s
  & th:hover
    border-top-color: color.adjust($text, $alpha: -0.2)
