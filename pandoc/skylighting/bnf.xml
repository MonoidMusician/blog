<?xml version="1.0" encoding="UTF-8"?>
<language name="BNFish" casesensitive="1">
  <highlighting>
    <contexts>
      <context name="Root" attribute="Normal Text" lineEndContext="#stay">
        <DetectChar attribute="Comment" context="Comment" char="#"/>
        <Detect2Chars attribute="Comment" context="Comment" char="/" char1="/"/>
        <RegExpr attribute="Variable" context="#stay" String="\$[-\w]+"/>
        <IncludeRules context="FindOperators"/>
        <IncludeRules context="FindStrings"/>
        <IncludeRules context="FindRegex"/>
      </context>

      <context name="FindOperators" attribute="Normal Text" lineEndContext="#stay">
        <!-- <keyword attribute="Operator" context="#stay" String="operators"/> -->
        <RegExpr attribute="Operator" context="#stay" String="[:=|&lt;+*?]|::?=|&lt;-|-&gt;"/>
      </context>

      <context name="Comment" attribute="Comment" lineEndContext="#pop">
      </context>

      <!-- FindStrings looks for single and double quoted strings -->
      <context name="FindStrings" attribute="Normal Text" lineEndContext="#stay">
        <DetectChar context="StringSQ" attribute="String SingleQ" char="'"/>
        <DetectChar context="StringDQ" attribute="String DoubleQ" char="&quot;"/>
      </context>

      <!-- StringSQ consumes anything till ' -->
      <context name="StringSQ" attribute="String SingleQ" lineEndContext="#stay">
        <!--no line continuation here-->
        <Detect2Chars attribute="Escape" char="\" char1="'"/>
        <Detect2Chars attribute="Escape" char="\" char1="\"/>
        <DetectChar attribute="String SingleQ" context="#pop" char="'"/>
      </context>

      <!-- StringDQ consumes anything till ", substitutes vars and expressions -->
      <context name="StringDQ" attribute="String DoubleQ" lineEndContext="#stay">
        <LineContinue attribute="Escape"/>
        <Detect2Chars attribute="Escape" char="\" char1="&quot;"/>
        <Detect2Chars attribute="Escape" char="\" char1="$"/>
        <Detect2Chars attribute="Escape" char="\" char1="\"/>
        <DetectChar attribute="String DoubleQ" context="#pop" char="&quot;"/>
      </context>

      <!-- <context name="FindRegex" attribute="Normal Text" lineEndContext="#stay">
        <DetectChar attribute="Regular Expression" context="Regex" char="/"/>
      </context>
      <context name="Regex" attribute="Regular Expression" lineEndContext="#stay">
        <Detect2Chars attribute="Escape" char="\" char1="/"/>
        <Detect2Chars attribute="Escape" char="\" char1="\"/>
        <DetectChar attribute="Regular Expression" context="#pop" char="/"/>
      </context> -->

      <!-- Regular Expressions -->
      <context name="FindRegex" attribute="Normal Text" lineEndContext="#stay">
        <DetectChar attribute="Regular Expression" context="(regex caret first check)" char="/"/>
      </context>
      <context attribute="Regular Expression" lineEndContext="#stay" name="Regular Expression">
        <RegExpr attribute="Regular Expression" context="#pop#pop" String="/\w*"/>
        <RegExpr attribute="Pattern Character Class" String="\\[nrtvfDdSsWw]"/>
        <DetectChar attribute="Pattern Character Class" context="(charclass caret first check)" char="["/>
        <RegExpr attribute="Pattern Internal Operator" String="\{[\d, ]+\}|\\[bB]|\\.|\$(?=/)|[?+*()|]"/>
      </context>
      <context attribute="Pattern Character Class" lineEndContext="#stay" name="Regular Expression Character Class">
        <RegExpr String="\\[\[\]]"/>
        <RegExpr attribute="Pattern Internal Operator" String="\\."/>
        <DetectChar attribute="Pattern Character Class" context="#pop#pop" char="]"/>
      </context>
      <context attribute="Pattern Internal Operator" lineEndContext="#pop" name="(regex caret first check)" fallthrough="true" fallthroughContext="Regular Expression">
        <DetectChar attribute="Pattern Internal Operator" context="Regular Expression" char="^"/>
      </context>
      <context attribute="Pattern Internal Operator" lineEndContext="#pop" name="(charclass caret first check)" fallthrough="true" fallthroughContext="Regular Expression Character Class">
        <DetectChar attribute="Pattern Internal Operator" context="Regular Expression Character Class" char="^"/>
      </context>
    </contexts>

    <itemDatas>
      <itemData name="Normal Text"    defStyleNum="dsNormal"/>
      <itemData name="Keychar"        defStyleNum="dsSpecialChar"/>
      <itemData name="Variable"       defStyleNum="dsVariable"/>
      <itemData name="Operator"       defStyleNum="dsOperator"/>
      <itemData name="Builtin"        defStyleNum="dsBuiltIn"/>
      <itemData name="Index"          defStyleNum="dsAttribute"/>
      <itemData name="Import"         defStyleNum="dsImport"/>

      <itemData name="String SingleQ" defStyleNum="dsString"/>
      <itemData name="String DoubleQ" defStyleNum="dsString"/>
      <itemData name="Escape"         defStyleNum="dsSpecialChar"/>

      <itemData name="Regular Expression" defStyleNum="dsSpecialString" spellChecking="false"/>
      <itemData name="Pattern Internal Operator" defStyleNum="dsSpecialChar" spellChecking="false"/>
      <itemData name="Pattern Character Class" defStyleNum="dsSpecialChar" spellChecking="false"/>

      <itemData name="Comment"        defStyleNum="dsComment"/>

      <itemData name="Error"          defStyleNum="dsError"/>
    </itemDatas>
  </highlighting>
</language>
